#library
import os
import time
clear = lambda:os.system('clear')

#functions
def header():
  print("FL-ACT4: FCFS")
  print("Manangat, Renz Darryl M.\n")

def clearscreen():
  input("\nPress Enter to continue...")
  clear()
  
#inputs
header()

#input process count
processArr = []
validation = False
while validation == False:
  processCount = input("\nEnter number of processes: ")
  if processCount.isnumeric():
    if int(processCount) > 0:
      validation = True
      processCount = int(processCount)
    
    else:
      print("Invalid Input!")
  else:
    print("Invalid Input!")

#input arrival time and burst time  
arrivalArr = []
burstArr = []
for i in range(0, processCount):
  print("\nP" + str(i+1) + ":")
  processArr.append("P" + str(i+1))
  validation = False
  while validation == False:
    arrival = input("\nEnter arrival time: ")
    if arrival.isnumeric():
      if int(arrival) >= 0:
        validation = True
        arrivalArr.append(int(arrival))
      
      else:
        print("Invalid Input!")
    else:
      print("Invalid Input!")
  
  validation = False
  while validation == False:
    burst = input("\nEnter burst time: ")
    if burst.isnumeric():
      if int(burst) >= 0:
        validation = True
        burstArr.append(int(burst))
      
      else:
        print("Invalid Input!")
    else:
      print("Invalid Input!")

clearscreen()
#display

#timeline
finished = []
timeArrived = []
timeCompleted = []
section = "|------|"
timeline = ""
processed = []
progress = 0
order = list(arrivalArr)
order.sort()


i=0
while i < processCount:
  header()
  print("Process List:\n")
  categories = ["Processes", "Arrival Time", "Burst Time"]
  for a in range(0, processCount+1):
    if a == 0:
      for b in range(0, 3):
        print(categories[b], end="\t")
    
    else:
      print(processArr[a-1], arrivalArr[a-1], burstArr[a-1], sep="\t\t")
  
  if order[i] > progress:
    progress += (order[i] - progress)
    processed.append("IDLE")
    timeline += section
    
  
  else:
    for k in range(0, processCount):
      if arrivalArr[k] == order[i] and processArr[k] not in finished:
        break
    timeArrived.append(progress)
    timeline += section
    processed.append(processArr[k])
    progress += burstArr[k]
    timeCompleted.append(progress)
    finished.append(processArr[k])
    i+=1
  
  print("\nTimeline:\n")
  print(timeline)
  for j in range(0,len(processed)):
    if processed[j] == "IDLE":
      print("  " + processed[j],end="  ")
    else:
      print("   " + processed[j],end="   ")
  print("\n\nCompleted time: " + str(timeCompleted[i-1]))
  clearscreen()
  
  if i == processCount:
    aveTurn = 0
    aveWait = 0
    for x in range(0, processCount):
      aveTurn += timeCompleted[x] - arrivalArr[x]
      aveWait += timeArrived[x] - arrivalArr[x]
    
    aveTurn /= processCount
    aveWait /= processCount
    
    header()
    print("\nAverage turnaround time: " + str(round(aveTurn,2)))
    print("\nAverage waiting time: " + str(round(aveWait,2)))
